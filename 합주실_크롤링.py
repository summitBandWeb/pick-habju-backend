# -*- coding: utf-8 -*-
"""합주실 크롤링.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W_0B5MTvUDQfNvzMduR5awaPPm8PJrY3
"""

!pip install selenium
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup
from datetime import datetime

import time
import json
import os
import re
import tempfile


# 크롬 드라이버 실행
temp_dir = tempfile.mkdtemp()

options = Options()
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument(f'--user-data-dir={temp_dir}')

driver = webdriver.Chrome(options=options)

target_year = "2025"
target_month = "05"
target_date = "13"
target_times = ["19"]

target_str = f"{target_year}-{target_month}-{target_date}"

# 드림 합주실

# 예약 페이지로 이동
driver.get("https://www.xn--hy1bm6g6ujjkgomr.com/bbs/board.php?bo_table=booking&cp_code=&mode=orderform&rm_ix=25")

# 2초 정도 대기 (캘린더 로딩 시간)
time.sleep(1)

# 날짜 클릭 (예: 2025-04-10)
xpath_expr = f'//div[contains(@id, "{target_str}_day")]'
target_element = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.XPATH, xpath_expr))
)
target_element.click()

# 정보가 갱신되도록 잠깐 기다림
time.sleep(1)  # 또는 WebDriverWait로 바꿔도 좋아

# time-list (ul 태그)가 뜰 때까지 기다림
WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "time-list"))
)

# ul#time-list 안의 모든 label.btn-time 요소들 찾기
time_labels = driver.find_elements(By.CSS_SELECTOR, "#time-list label.btn-time")

# 각 label의 title 속성 추출
available_times = [label.get_attribute("title") for label in time_labels]

available = []

for t in available_times:  # 위 두 문자열이 담긴 리스트
    if "최대" in t:
        available.append(int(t.split("시")[0]))

print(target_times[0] in available)

# 그루브 합주실

# ─────────────────────────────────────
# ✅ 2. 로그인
# ─────────────────────────────────────
driver.get("https://www.groove4.co.kr/member/login.asp")

USER_ID = "summit2025"
USER_PW = "sumsum12!@"

WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.NAME, "login_id"))
).send_keys(USER_ID)

driver.find_element(By.NAME, "login_pw").send_keys(USER_PW)

WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, '//input[@alt="로그인"]'))
).click()

time.sleep(1)

# ─────────────────────────────────────
# ✅ 3. 예약 페이지 이동
# ─────────────────────────────────────
driver.get("https://www.groove4.co.kr/reservation/reservation.asp?shop=30&gubun=sadang")
time.sleep(1)

# ─────────────────────────────────────
# ✅ 4. 크롤링
# ─────────────────────────────────────
date_links = driver.find_elements(By.XPATH, "//a[contains(@onclick, 'setReserveDate')]")

all_reserved_data = []


# 기준 날짜 (맨 앞 날짜)
start_str = date_links[0].get_attribute("onclick").split("'")[1]  # '2025-04-01'
start_date = datetime.strptime(start_str, "%Y-%m-%d")

# 목표 날짜
target_date_obj = datetime.strptime(target_str, "%Y-%m-%d")

# 날짜 차이 계산
delta_days = (target_date_obj - start_date).days

# 인덱스 확인
if 0 <= delta_days < len(date_links):
    tag = date_links[delta_days]
else:
    print("해당 날짜가 리스트 범위를 벗어났습니다.")

try:
    tag.click()
except Exception as e:
    print(f"❌ 날짜 클릭 실패: {target_str} ({e})")

print(f"📅 {target_str} 로딩 중...")
time.sleep(1)  # 날짜 바뀌는 시간 대기

# 파싱
soup = BeautifulSoup(driver.page_source, "html.parser")
reserve_elements = soup.select(".reserve_time_off")

for el in reserve_elements:
    el_id = el.get("id", "")
    match = re.match(rf"reserve_time_(1[3-6])_{target_times[0]}", el_id)
    if match:
        room = int(match.group(1))
        all_reserved_data.append({
            "날짜": target_str,
            "방번호": room
        })

print(all_reserved_data)
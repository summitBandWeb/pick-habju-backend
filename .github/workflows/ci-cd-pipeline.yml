# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: pick-habju-back-deploy-bucket
  AWS_CODE_DEPLOY_APPLICATION: pick-habju-Application-CD
  AWS_CODE_DEPLOY_GROUP: pick-habju-Deployment-Group

jobs:
  # 1. ÌÖåÏä§Ìä∏ Ïû°(Job)
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python ÏÖãÏóÖ Î∞è Í∞ÄÏÉÅÌôòÍ≤Ω ÏÉùÏÑ±
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip' # Ìå®ÌÇ§ÏßÄ Ï∫êÏã±ÏúºÎ°ú ÏÑ§Ïπò ÏÜçÎèÑ Ìñ•ÏÉÅ

      - name: Í∞ÄÏÉÅÌôòÍ≤Ω ÌôúÏÑ±Ìôî Î∞è Ìå®ÌÇ§ÏßÄ ÏÑ§Ïπò
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r ./pick-habju-backend/requirements.txt

      - name: ÌÖåÏä§Ìä∏ Ïã§Ìñâ (Í∞ÄÏÉÅÌôòÍ≤Ω ÎÇ¥ÏóêÏÑú)
        run: |
          source venv/bin/activate
          pytest

      - name: DiscordÏóê ÌÖåÏä§Ìä∏ Ïã§Ìå® ÏïåÎ¶º Ï†ÑÏÜ°
        if: failure() && steps.pytest.outcome == 'failure'
        run: |
          curl -H "Content-Type: application/json" -d '{
            "content": "üö® **ÌÖåÏä§Ìä∏ Ïã§Ìå®!** Î∞∞Ìè¨Í∞Ä Ï§ëÎã®ÎêòÏóàÏäµÎãàÎã§.",
            "embeds": [
              {
                "title": "Ïã§Ìå®Ìïú ÏõåÌÅ¨ÌîåÎ°úÏö∞ Î∞îÎ°úÍ∞ÄÍ∏∞",
                "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "color": 15158332,
                "fields": [
                  { "name": "Repository", "value": "${{ github.repository }}", "inline": true },
                  { "name": "Commit", "value": "`${{ github.sha }}`", "inline": true }
                ]
              }
            ]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

  # 2. Î∞∞Ìè¨ Ïû°(Job) - ÌÖåÏä§Ìä∏ Ïû°Ïù¥ ÏÑ±Í≥µÌï¥ÏïºÎßå Ïã§ÌñâÎê®
  deploy:
    name: Deploy
    needs: test # 'test' Ïû°Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÎÅùÎÇòÏïº Ïù¥ Ïû°ÏùÑ ÏãúÏûë
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # - name: make application.yml
      #   run: |
      #     mkdir -p ./src/main/resources
      #     cd ./src/main/resources
      #     touch ./application.yml
      #     touch ./application-common.yml
      #     touch ./application-prod.yml
      #     echo "${{ secrets.APPLICATION }}" > ./application.yml
      #     echo "${{ secrets.COMMON }}" > ./application-common.yml
      #     echo "${{ secrets.PROD }}" > ./application-prod.yml

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: AWS credential ÏÑ§Ï†ï
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

      - name: EC2Ïóê Î∞∞Ìè¨
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
      
      - name: DiscordÏóê Î∞∞Ìè¨ ÏÑ±Í≥µ ÏïåÎ¶º Ï†ÑÏÜ°
        if: success()
        run: |
          curl -H "Content-Type: application/json" -d '{
            "content": "‚úÖ **Î∞∞Ìè¨ ÏÑ±Í≥µ!**",
            "embeds": [
              {
                "title": "Î∞∞Ìè¨Îêú ÏõåÌÅ¨ÌîåÎ°úÏö∞ Î∞îÎ°úÍ∞ÄÍ∏∞",
                "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "color": 3066993,
                "fields": [
                  { "name": "Repository", "value": "${{ github.repository }}", "inline": true },
                  { "name": "Commit", "value": "`${{ github.sha }}`", "inline": true }
                ]
              }
            ]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}